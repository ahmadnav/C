<?xml version='1.0' encoding='UTF-8'?>
<DEFECTS><DEFECT><SFA><FILEPATH>a:\c (code)\linkedlist\linkedlist\</FILEPATH><FILENAME>linkedlist.cpp</FILENAME><LINE>27</LINE><COLUMN>13</COLUMN></SFA><DEFECTCODE>6244</DEFECTCODE><DESCRIPTION>Local declaration of 'head' hides previous declaration at line '18' of 'a:\c (code)\linkedlist\linkedlist\linkedlist.cpp'.</DESCRIPTION><FUNCTION>newentry</FUNCTION><DECORATED>?newentry@@YAPAUNode@@PAU1@0@Z</DECORATED><FUNCLINE>27</FUNCLINE><PATH><SFA><FILEPATH>a:\c (code)\linkedlist\linkedlist\</FILEPATH><FILENAME>linkedlist.cpp</FILENAME><LINE>18</LINE><COLUMN>6</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>a:\c (code)\linkedlist\linkedlist\</FILEPATH><FILENAME>linkedlist.cpp</FILENAME><LINE>31</LINE><COLUMN>6</COLUMN></SFA><DEFECTCODE>6031</DEFECTCODE><DESCRIPTION>Return value ignored: 'scanf'.</DESCRIPTION><FUNCTION>newentry</FUNCTION><DECORATED>?newentry@@YAPAUNode@@PAU1@0@Z</DECORATED><FUNCLINE>27</FUNCLINE><PATH/></DEFECT><DEFECT><SFA><FILEPATH>a:\c (code)\linkedlist\linkedlist\</FILEPATH><FILENAME>linkedlist.cpp</FILENAME><LINE>31</LINE><COLUMN>6</COLUMN></SFA><DEFECTCODE>6067</DEFECTCODE><DESCRIPTION>_Param_(2) in call to 'scanf' must be the address of a string. Actual type: 'class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; (*)[10]'.</DESCRIPTION><FUNCTION>newentry</FUNCTION><DECORATED>?newentry@@YAPAUNode@@PAU1@0@Z</DECORATED><FUNCLINE>27</FUNCLINE><PATH/></DEFECT><DEFECT><SFA><FILEPATH>a:\c (code)\linkedlist\linkedlist\</FILEPATH><FILENAME>linkedlist.cpp</FILENAME><LINE>33</LINE><COLUMN>6</COLUMN></SFA><DEFECTCODE>6031</DEFECTCODE><DESCRIPTION>Return value ignored: 'scanf'.</DESCRIPTION><FUNCTION>newentry</FUNCTION><DECORATED>?newentry@@YAPAUNode@@PAU1@0@Z</DECORATED><FUNCLINE>27</FUNCLINE><PATH/></DEFECT><DEFECT><SFA><FILEPATH>a:\c (code)\linkedlist\linkedlist\</FILEPATH><FILENAME>linkedlist.cpp</FILENAME><LINE>33</LINE><COLUMN>6</COLUMN></SFA><DEFECTCODE>6067</DEFECTCODE><DESCRIPTION>_Param_(2) in call to 'scanf' must be the address of a string. Actual type: 'class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; (*)[10]'.</DESCRIPTION><FUNCTION>newentry</FUNCTION><DECORATED>?newentry@@YAPAUNode@@PAU1@0@Z</DECORATED><FUNCLINE>27</FUNCLINE><PATH/></DEFECT><DEFECT><SFA><FILEPATH>a:\c (code)\linkedlist\linkedlist\</FILEPATH><FILENAME>linkedlist.cpp</FILENAME><LINE>35</LINE><COLUMN>6</COLUMN></SFA><DEFECTCODE>6031</DEFECTCODE><DESCRIPTION>Return value ignored: 'scanf'.</DESCRIPTION><FUNCTION>newentry</FUNCTION><DECORATED>?newentry@@YAPAUNode@@PAU1@0@Z</DECORATED><FUNCLINE>27</FUNCLINE><PATH/></DEFECT><DEFECT><SFA><FILEPATH>a:\c (code)\linkedlist\linkedlist\</FILEPATH><FILENAME>linkedlist.cpp</FILENAME><LINE>36</LINE><COLUMN>6</COLUMN></SFA><DEFECTCODE>6031</DEFECTCODE><DESCRIPTION>Return value ignored: 'scanf'.</DESCRIPTION><FUNCTION>newentry</FUNCTION><DECORATED>?newentry@@YAPAUNode@@PAU1@0@Z</DECORATED><FUNCLINE>27</FUNCLINE><PATH/></DEFECT><DEFECT><SFA><FILEPATH>a:\c (code)\linkedlist\linkedlist\</FILEPATH><FILENAME>linkedlist.cpp</FILENAME><LINE>31</LINE><COLUMN>6</COLUMN></SFA><DEFECTCODE>6011</DEFECTCODE><DESCRIPTION>Dereferencing NULL pointer 'tmp'. </DESCRIPTION><FUNCTION>newentry</FUNCTION><DECORATED>?newentry@@YAPAUNode@@PAU1@0@Z</DECORATED><FUNCLINE>27</FUNCLINE><PROBABILITY>1</PROBABILITY><RANK>4</RANK><CATEGORY><RULECATEGORY>mspft</RULECATEGORY></CATEGORY><PATH><SFA><FILEPATH>a:\c (code)\linkedlist\linkedlist\</FILEPATH><FILENAME>linkedlist.cpp</FILENAME><LINE>28</LINE><COLUMN>7</COLUMN></SFA><SFA><FILEPATH>a:\c (code)\linkedlist\linkedlist\</FILEPATH><FILENAME>linkedlist.cpp</FILENAME><LINE>29</LINE><COLUMN>7</COLUMN><KEYEVENT><ID>1</ID><KIND>declaration</KIND><IMPORTANCE>Essential</IMPORTANCE><MESSAGE>'tmp' may be NULL</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>a:\c (code)\linkedlist\linkedlist\</FILEPATH><FILENAME>linkedlist.cpp</FILENAME><LINE>30</LINE><COLUMN>7</COLUMN></SFA><SFA><FILEPATH>a:\c (code)\linkedlist\linkedlist\</FILEPATH><FILENAME>linkedlist.cpp</FILENAME><LINE>31</LINE><COLUMN>6</COLUMN><KEYEVENT><ID>2</ID><KIND>usage</KIND><IMPORTANCE>Essential</IMPORTANCE><MESSAGE>'tmp' is dereferenced, but may still be NULL</MESSAGE></KEYEVENT></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>a:\c (code)\linkedlist\linkedlist\</FILEPATH><FILENAME>linkedlist.cpp</FILENAME><LINE>45</LINE><COLUMN>59</COLUMN></SFA><DEFECTCODE>28182</DEFECTCODE><DESCRIPTION>Dereferencing NULL pointer. 'prev' contains the same NULL value as 'head-&gt;next' did. </DESCRIPTION><FUNCTION>newentry</FUNCTION><DECORATED>?newentry@@YAPAUNode@@PAU1@0@Z</DECORATED><FUNCLINE>27</FUNCLINE><PROBABILITY>1</PROBABILITY><RANK>3</RANK><CATEGORY><RULECATEGORY>mspft</RULECATEGORY></CATEGORY><PATH><SFA><FILEPATH>a:\c (code)\linkedlist\linkedlist\</FILEPATH><FILENAME>linkedlist.cpp</FILENAME><LINE>28</LINE><COLUMN>7</COLUMN></SFA><SFA><FILEPATH>a:\c (code)\linkedlist\linkedlist\</FILEPATH><FILENAME>linkedlist.cpp</FILENAME><LINE>29</LINE><COLUMN>7</COLUMN></SFA><SFA><FILEPATH>a:\c (code)\linkedlist\linkedlist\</FILEPATH><FILENAME>linkedlist.cpp</FILENAME><LINE>30</LINE><COLUMN>7</COLUMN></SFA><SFA><FILEPATH>a:\c (code)\linkedlist\linkedlist\</FILEPATH><FILENAME>linkedlist.cpp</FILENAME><LINE>31</LINE><COLUMN>6</COLUMN></SFA><SFA><FILEPATH>a:\c (code)\linkedlist\linkedlist\</FILEPATH><FILENAME>linkedlist.cpp</FILENAME><LINE>32</LINE><COLUMN>7</COLUMN></SFA><SFA><FILEPATH>a:\c (code)\linkedlist\linkedlist\</FILEPATH><FILENAME>linkedlist.cpp</FILENAME><LINE>33</LINE><COLUMN>6</COLUMN></SFA><SFA><FILEPATH>a:\c (code)\linkedlist\linkedlist\</FILEPATH><FILENAME>linkedlist.cpp</FILENAME><LINE>34</LINE><COLUMN>7</COLUMN></SFA><SFA><FILEPATH>a:\c (code)\linkedlist\linkedlist\</FILEPATH><FILENAME>linkedlist.cpp</FILENAME><LINE>35</LINE><COLUMN>6</COLUMN></SFA><SFA><FILEPATH>a:\c (code)\linkedlist\linkedlist\</FILEPATH><FILENAME>linkedlist.cpp</FILENAME><LINE>36</LINE><COLUMN>6</COLUMN></SFA><SFA><FILEPATH>a:\c (code)\linkedlist\linkedlist\</FILEPATH><FILENAME>linkedlist.cpp</FILENAME><LINE>38</LINE><COLUMN>10</COLUMN></SFA><SFA><FILEPATH>a:\c (code)\linkedlist\linkedlist\</FILEPATH><FILENAME>linkedlist.cpp</FILENAME><LINE>45</LINE><COLUMN>20</COLUMN></SFA><SFA><FILEPATH>a:\c (code)\linkedlist\linkedlist\</FILEPATH><FILENAME>linkedlist.cpp</FILENAME><LINE>45</LINE><COLUMN>41</COLUMN></SFA><SFA><FILEPATH>a:\c (code)\linkedlist\linkedlist\</FILEPATH><FILENAME>linkedlist.cpp</FILENAME><LINE>45</LINE><COLUMN>59</COLUMN></SFA><SFA><FILEPATH>a:\c (code)\linkedlist\linkedlist\</FILEPATH><FILENAME>linkedlist.cpp</FILENAME><LINE>45</LINE><COLUMN>20</COLUMN><KEYEVENT><ID>1</ID><KIND>branch</KIND><IMPORTANCE>Full</IMPORTANCE><MESSAGE>'prev' may be NULL (Continue this loop)</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>a:\c (code)\linkedlist\linkedlist\</FILEPATH><FILENAME>linkedlist.cpp</FILENAME><LINE>45</LINE><COLUMN>41</COLUMN></SFA><SFA><FILEPATH>a:\c (code)\linkedlist\linkedlist\</FILEPATH><FILENAME>linkedlist.cpp</FILENAME><LINE>45</LINE><COLUMN>59</COLUMN><KEYEVENT><ID>2</ID><KIND>usage</KIND><IMPORTANCE>Essential</IMPORTANCE><MESSAGE>'prev' is dereferenced, but may still be NULL</MESSAGE></KEYEVENT></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>a:\c (code)\linkedlist\linkedlist\</FILEPATH><FILENAME>linkedlist.cpp</FILENAME><LINE>61</LINE><COLUMN>7</COLUMN></SFA><DEFECTCODE>6067</DEFECTCODE><DESCRIPTION>_Param_(2) in call to 'printf' must be the address of a string. Actual type: 'class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; [10]'.</DESCRIPTION><FUNCTION>Print</FUNCTION><DECORATED>?Print@@YAXPAUNode@@@Z</DECORATED><FUNCLINE>57</FUNCLINE><PATH/></DEFECT><DEFECT><SFA><FILEPATH>a:\c (code)\linkedlist\linkedlist\</FILEPATH><FILENAME>linkedlist.cpp</FILENAME><LINE>62</LINE><COLUMN>7</COLUMN></SFA><DEFECTCODE>6067</DEFECTCODE><DESCRIPTION>_Param_(2) in call to 'printf' must be the address of a string. Actual type: 'class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; [10]'.</DESCRIPTION><FUNCTION>Print</FUNCTION><DECORATED>?Print@@YAXPAUNode@@@Z</DECORATED><FUNCLINE>57</FUNCLINE><PATH/></DEFECT><DEFECT><SFA><FILEPATH>a:\c (code)\linkedlist\linkedlist\</FILEPATH><FILENAME>linkedlist.cpp</FILENAME><LINE>71</LINE><COLUMN>6</COLUMN></SFA><DEFECTCODE>6031</DEFECTCODE><DESCRIPTION>Return value ignored: 'scanf'.</DESCRIPTION><FUNCTION>main</FUNCTION><DECORATED>main</DECORATED><FUNCLINE>67</FUNCLINE><PATH/></DEFECT><DEFECT><SFA><FILEPATH>a:\c (code)\linkedlist\linkedlist\</FILEPATH><FILENAME>linkedlist.cpp</FILENAME><LINE>83</LINE><COLUMN>8</COLUMN></SFA><DEFECTCODE>6031</DEFECTCODE><DESCRIPTION>Return value ignored: 'scanf'.</DESCRIPTION><FUNCTION>main</FUNCTION><DECORATED>main</DECORATED><FUNCLINE>67</FUNCLINE><PATH/></DEFECT></DEFECTS>